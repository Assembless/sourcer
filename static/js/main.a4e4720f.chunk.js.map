{"version":3,"sources":["posts/index.ts","api/authors.ts","api/Post.ts","pages/Home.tsx","pages/SinglePost.tsx","pages/Wrong.tsx","utils/colorMethods.ts","utils/theme.ts","components/App.tsx","serviceWorker.ts","index.tsx","posts sync /^/.//.*/-/-en_US/.md$","posts/hello-world/hello-world--en_US.md"],"names":["id","title","author_id","created_at","languages","topics","name","Post","author","content","meta","posts","find","p","this","Author","Date","Promise","resolve","url","require","err","console","error","fetch","then","response","a","ok","clone","text","md","catch","authors","getParsedPosts","filter","map","post","useSignal","doSignal","useState","s","PostCard","props","to","Home","volume","ref","useRef","current","length","usePosts","useStyles","createUseStyles","theme","root","opacity","SinglePost","useParams","classes","signal","useEffect","fetchContent","log","usePost","className","source","Wrong","padZero","str","len","Array","join","slice","lightenColor","color","percent","num","parseInt","replace","amt","Math","round","R","B","G","toString","ThemeColor","baseColor","main","hex","indexOf","Error","r","g","b","invertColor","substr","result","exec","hexToRgb","DynamicTheme","palette","primary","background","App","locale","setLocale","language","setLanguage","basename","process","exact","path","component","HomePage","SinglePostPage","WrongPage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","code","keys","Object","module","exports"],"mappings":"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","file":"static/js/main.a4e4720f.chunk.js","sourcesContent":["export interface IPostData {\n    id: string;\n    title: string;\n    author_id: string;\n    created_at: string;\n    languages: string[];\n    topics: string[];\n}\n\nexport default\n    [\n        {\n            id: \"hello-world\",\n            title: \"Hello World\",\n            author_id: \"000-420\",\n            created_at: \"Thu Jun 04 2020 21:54:13 GMT+0200 (Central European Summer Time)\",\n            languages: [ \"en_US\", \"pl_PL\" ],\n            topics: [ \"offtopic\" ]\n        }\n    ] as IPostData[];","import { IAuthor } from \"./Post\";\n\nexport default\n    [\n        {\n            name: \"Mike\",\n            id: \"000-420\"\n        },\n        {\n            name: \"Damian\",\n            id: \"100-000\"\n        }\n    ] as IAuthor[]","import posts from \"../posts\";\nimport authors from \"./authors\";\nimport { useRef, useEffect, useState } from \"react\";\n\nexport interface IPost {\n    id: string;\n    title: string;\n    author: IAuthor | null;\n    created_at: Date | null;\n    languages: string[];\n    topics: string[];\n    content?: string;\n    exists: boolean;\n    fetchContent: () => Promise<string | void | undefined>;\n}\n\nexport class Post implements IPost {\n    id: string;\n    title: string;\n    author: IAuthor | null;\n    created_at: Date | null;\n    languages: string[];\n    topics: string[];\n    content: string;\n\n    constructor(id: string) {\n        const meta = posts.find(p => p.id === id);\n\n        //if(!meta) throw new Error(`Post with id ${id} could not be found.`);\n\n        this.id = id;\n        this.title = meta?.title ?? \"\";\n        this.author = new Author(meta?.author_id ?? \"\") as IAuthor;\n        this.created_at = new Date(meta?.created_at ?? \"\");\n        this.languages = meta?.languages ?? [];\n        this.topics = meta?.topics ?? [];\n        this.content = \"\";\n    }\n\n    get exists() {\n        return !!this.title;\n    }\n\n    // TODO: Implement language detection.\n    // TODO: Refactor response texts.\n    fetchContent() {\n        \n        return new Promise<string>((resolve) => {\n            let url;\n    \n            try {\n                url = require(`../posts/${this.id}/${this.id}--en_US.md`)\n            } catch(err) {\n                console.error(err);\n            }\n\n            if(!url) {\n                resolve(\"# Post not found.\");\n                return;\n            }\n\n            fetch(url)\n                .then(async (response) => {\n                    if(response.ok) {\n                        const md = await response.clone().text();\n\n                        resolve(md);\n                    } else {\n                        resolve(\"# Error while fetching post.\");\n                    }\n                })\n                .catch((err) => {\n                    resolve(\"# Unknown error occurred.\");\n                    console.error(err);\n                });\n        })\n    }\n}\n\nexport interface IAuthor {\n    name: string;\n    id: string;\n    posts: IPost[];\n    exists: boolean\n}\n\nexport class Author implements IAuthor {\n    name: string;\n    id: string;\n\n    constructor(author_id: string) {\n        const author = authors.find(a => a.id === author_id);\n\n        //if(!author) throw new Error(`Author with id ${author_id} cound not be found.`)\n\n        this.name = author?.name ?? \"\";\n        this.id = author_id;\n    }\n\n    get exists() {\n        return !!this.name;\n    }\n\n    get posts() {\n        return getParsedPosts().filter(p => p.author?.id === this.id);\n    }\n}\n\nexport const getParsedPosts = () => posts.map(post => new Post(post.id));\n\nexport const usePosts = (volume?: number) => {\n    const ref = useRef(getParsedPosts());\n\n    if(typeof volume === \"number\") ref.current.length = volume;\n    \n    return ref.current as IPost[];\n}\n\nexport const usePost = (id: string) => {\n    const ref = useRef<IPost>(new Post(id));\n\n    const signal = useSignal();\n\n    useEffect(() => {\n         ref.current.fetchContent()\n            .then((md: string | void | undefined) => {\n                console.log(md);\n                if(typeof md === \"string\")\n                    ref.current.content = md;\n                signal();\n            });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return ref.current as IPost;\n}\n\nexport const useSignal = () => {\n    const doSignal = useState(false)[1];\n\n    return () => doSignal(s => !s);\n}","import React from \"react\";\nimport { usePosts, IPost } from \"../api/Post\";\nimport { Link } from \"react-router-dom\";\n\nconst Home = () => {\n    const posts = usePosts();\n\n    return <div>\n        <h2>Home</h2>\n\n        {\n            // refactor to another component before extending..\n            posts.map(post => <PostCard {...post} />)\n        }\n    </div>\n}\n\nconst PostCard = (props: IPost) => {\n\n    return <Link to={`/p/${props.id}`}>{props.title}</Link>\n}\n\nexport default Home;","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { createUseStyles } from \"react-jss\";\nimport { ITheme } from \"../types\";\nimport ReactMarkdown from \"react-markdown\";\nimport { usePost } from \"../api/Post\";\n//import useLittera from \"react-littera\";\n\nconst useStyles = createUseStyles((theme: ITheme) => ({\n    root: {\n     \n        \"& p\": {\n            opacity: 0.5\n        }\n    }\n}));\n\nconst SinglePost = () => {\n    const { id } = useParams();\n    const classes = useStyles();\n    \n    const post = usePost(id);\n\n\n    return <div className={classes.root}>\n        <ReactMarkdown source={post.content} />\n    </div>\n}\n\nexport default SinglePost;","import React from \"react\";\n\nconst Wrong = () => {\n\n    return <div>Wrong</div>\n}\n\nexport default Wrong;","export function invertColor(hex: string) {\n    if (hex.indexOf('#') === 0) {\n        hex = hex.slice(1);\n    }\n    // convert 3-digit hex to 6-digits.\n    if (hex.length === 3) {\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n    }\n    if (hex.length !== 6) {\n        throw new Error('Invalid HEX color.');\n    }\n    // invert color components\n    var r = (255 - parseInt(hex.slice(0, 2), 16)).toString(16),\n        g = (255 - parseInt(hex.slice(2, 4), 16)).toString(16),\n        b = (255 - parseInt(hex.slice(4, 6), 16)).toString(16);\n    // pad each with zeros and return\n    return '#' + padZero(r) + padZero(g) + padZero(b);\n}\n\nfunction padZero(str: string, len?: number) {\n    len = len || 2;\n    var zeros = new Array(len).join('0');\n    return (zeros + str).slice(-len);\n}\n\nexport function getContrastYIQ(hex: string){\n\tvar r = parseInt(hex.substr(0,2),16);\n\tvar g = parseInt(hex.substr(2,2),16);\n\tvar b = parseInt(hex.substr(4,2),16);\n\tvar yiq = ((r*299)+(g*587)+(b*114))/1000;\n\treturn (yiq >= 128) ? 'black' : 'white';\n}\n\nexport var lightenColor = function(color: string, percent: number) {\n    var num = parseInt(color.replace(\"#\",\"\"),16),\n      amt = Math.round(2.55 * percent),\n      R = (num >> 16) + amt,\n      // eslint-disable-next-line no-mixed-operators\n      B = (num >> 8 & 0x00FF) + amt,\n      G = (num & 0x0000FF) + amt;\n\n      return (0x1000000 + (R<255?R<1?0:R:255)*0x10000 + (B<255?B<1?0:B:255)*0x100 + (G<255?G<1?0:G:255)).toString(16).slice(1);\n};\n\nexport function hexToRgb(hex: string) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n      r: parseInt(result[1], 16),\n      g: parseInt(result[2], 16),\n      b: parseInt(result[3], 16)\n    } : null;\n  }","import { ITheme, TThemeColor } from \"../types\";\nimport { getContrastYIQ, invertColor, lightenColor, hexToRgb } from \"./colorMethods\";\n\nclass DynamicTheme implements ITheme {\n\n    palette = {\n        primary: new ThemeColor(\"#9C6\"),\n        background: new ThemeColor(\"#FFF\")\n    }\n}\n\n\n\nclass ThemeColor implements TThemeColor {\n    public main: string;\n\n    constructor(baseColor: string) {\n        this.main = baseColor;   \n    }\n\n    get darker() {\n        return lightenColor(this.main as unknown as string, 15);\n    }\n\n    get lighter() {\n        return lightenColor(this.main as unknown as string, 10);\n    }\n\n    get inverted() {\n        return invertColor(this.main as unknown as string);\n    }\n\n    get text() {\n        return getContrastYIQ(this.main as unknown as string);\n    }\n    \n    get rgb() {\n        return hexToRgb(this.main);\n    }\n}\n\nexport default DynamicTheme;","import React, { useState } from 'react';\nimport LitteraProvider from \"react-littera\";\nimport { ThemeProvider } from \"react-jss\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport { Home as HomePage, SinglePost as SinglePostPage, Wrong as WrongPage } from \"../pages\";\nimport DynamicTheme from \"../utils/theme\";\n\nfunction App() {\n  const [locale, setLocale] = useState(\"en_US\");\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={new DynamicTheme()}>\n        <LitteraProvider language={locale} setLanguage={setLocale}>\n          <Router basename={process.env.REACT_APP_BASENAME || \"/\"}>\n            <Switch>\n              <Route exact path=\"/\" component={HomePage} />\n              <Route path=\"/p/:id\" component={SinglePostPage} />\n              <Route component={WrongPage} />\n            </Switch>\n          </Router>\n        </LitteraProvider>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","var map = {\n\t\"./hello-world/hello-world--en_US.md\": 58\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 57;","module.exports = __webpack_public_path__ + \"static/media/hello-world--en_US.038085a8.md\";"],"sourceRoot":""}