{"version":3,"sources":["components/shared/Button/index.tsx","components/shared/Button/styles.ts","components/shared/IconButton/index.tsx","components/shared/IconButton/styles.ts","components/shared/PostCard/index.tsx","components/shared/PostCard/styles.ts","components/shared/Flex.tsx","components/common/AppBar/index.tsx","components/common/AppBar/styles.ts","posts/index.ts","config/authors.ts","api/Author.ts","api/Post.ts","pages/Home/index.tsx","pages/Home/styles.ts","pages/SinglePost.tsx","pages/Wrong.tsx","utils/colorMethods.ts","utils/theme.ts","utils/icons.ts","components/App.tsx","serviceWorker.ts","index.tsx","posts sync /^/.//.*/-/-en_US/.md$","posts/hello-world/hello-world--en_US.md","posts/rudy/rudy--en_US.md","posts/welcome-to-jamrock/welcome-to-jamrock--en_US.md"],"names":["createUseStyles","theme","root","backgroundColor","palette","primary","main","useStyles","position","width","height","borderRadius","display","alignItems","justifyContent","background","border","transition","cursor","outline","color","textAlign","fontWeight","fontSize","IconButton","name","onClick","classes","className","icon","size","margin","flexBasis","image","top","left","transform","imageWrapper","overflow","minHeight","title","textDecoration","featured","contentWrapper","padding","PostCard","props","history","useHistory","isMobile","useMediaQuery","rootClasses","cx","flexDirection","push","id","alt","src","thumbnail_url","to","author","moment","created_at","fromNow","Flex","reducedProps","_props","args","key","includes","reduceProps","style","Object","freeze","children","logo","userSelect","fontFamily","container","maxWidth","boundaries","AppBar","location","useLocation","navigate","path","pathname","author_id","languages","topics","Author","authors","find","a","this","getParsedPosts","filter","p","Post","content","meta","posts","Date","Promise","resolve","url","require","err","console","error","fetch","then","response","ok","clone","text","md","catch","map","post","useSignal","doSignal","useState","s","Home","volume","ref","useRef","current","length","usePosts","flexWrap","__p","i","SinglePost","useParams","signal","useEffect","fetchContent","log","usePost","source","Wrong","padZero","str","len","Array","join","slice","lightenColor","percent","num","parseInt","replace","amt","Math","round","R","B","G","toString","ThemeColor","baseColor","hex","indexOf","Error","r","g","b","invertColor","substr","result","exec","hexToRgb","DynamicTheme","library","add","fab","faCheckSquare","faCoffee","faArrowLeft","faCog","App","locale","setLocale","basename","process","language","setLanguage","exact","component","HomePage","SinglePostPage","WrongPage","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","headers","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","code","keys","module","exports"],"mappings":"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","file":"static/js/main.8e8e07f6.chunk.js","sourcesContent":["import React from \"react\";\nimport styles from \"./styles\";\nimport { createUseStyles } from \"react-jss\";\n\ntype TButtonProps = {\n    children: React.ReactNode\n}\n\n// Creates hook composing styles.\nconst useStyles = createUseStyles(styles);\n\nconst Button = ({ children }: TButtonProps) => {\n    const classes = useStyles();\n\n    return <button className={ classes.root }>{children}</button>\n}\n\nexport default Button;","import { ITheme } from \"../../../types\";\n\nexport default (theme: ITheme) => ({\n\n    root: {\n        backgroundColor: theme.palette.primary.main\n    }\n\n});","import React from \"react\";\nimport styles from \"./styles\";\nimport { createUseStyles } from \"react-jss\";\nimport Ink from \"react-ink\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\n\ntype TIconButtonProps = {\n    name: IconProp;\n    onClick: () => void\n}\n\n// Creates hook composing styles.\nconst useStyles = createUseStyles(styles);\n\nconst IconButton = ({ name, onClick }: TIconButtonProps) => {\n    const classes = useStyles();\n    // TODO: Add styling.\n    // TODO: Implement icons.\n    // TODO: Just finish the thang..\n    return  <button onClick={onClick} className={ classes.root }>\n                <FontAwesomeIcon icon={name} size=\"lg\" />\n                <Ink />\n            </button>\n}\n\nexport default IconButton;\n","import { ITheme } from \"../../../types\";\n\nexport default (theme: ITheme) => ({\n\n    root: {\n        position: \"relative\",\n        width: \"42px\",\n        height: \"42px\",\n        borderRadius: \"42px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        background: \"transparent\",\n        border: \"none\",\n        transition: \"background 255ms ease\",\n        cursor: \"pointer\",\n        outline: 0,\n        \"&:hover\": {\n            background: \"rgba(0, 0, 0, .2)\"\n        },\n\n        \"& i\": {\n            color: \"#000\",\n            textAlign: \"center\",\n            fontWeight: \"bold\",\n            fontSize: \"28px\"\n        }\n    },\n\n});","import React from \"react\";\nimport { IPost } from \"api/Post\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { createUseStyles } from \"react-jss\";\nimport styles from \"./styles\";\nimport { Flex } from \"components/shared\";\nimport moment from \"moment\";\nimport cx from \"classnames\";\nimport { useMediaQuery } from \"@react-hook/media-query\";\nimport Ink from \"react-ink\";\n\nconst useStyles = createUseStyles(styles);\n\nconst PostCard = (props: IPost & { featured?: boolean }) => {\n    const history = useHistory();\n    const classes = useStyles();\n    \n    const isMobile = useMediaQuery('only screen and (max-width: 620px)')\n\n    const navigate = () => {\n        history.push(`/p/${props.id}`);\n    }\n\n    const rootClasses = cx(classes.root, { [classes.featured]: props.featured });\n\n    return <Flex justifyContent={isMobile ? \"flex-start\" : \"space-between\"} flexDirection={isMobile ? \"column\" : \"row\"} className={ rootClasses }>\n\n                <div className={ classes.imageWrapper } onClick={navigate}>\n                    <img alt=\"thumbnail\" className={ classes.image } src={props.thumbnail_url} />\n                    <Ink />\n                </div>\n\n\n                <div className={ classes.contentWrapper }>\n                    <h2><Link className={ classes.title } to={`/p/${props.id}`}>{props.title}</Link></h2>\n                    <p>{props.author?.name}</p>\n                    <p>{ moment(props.created_at).fromNow() }</p>\n                </div>\n\n            </Flex>\n    \n}\n\nexport default PostCard;","import { ITheme } from \"../../../types\";\n\nexport default (theme: ITheme) => ({\n\n    root: {\n        margin: \"10px 0\",\n        flexBasis: \"45%\",\n        borderRadius: \"12px\",\n        position: \"relative\",\n        \"@media only screen and (max-width: 620px)\": {\n            flexBasis: \"100%\",\n        }\n    },  \n    image: {\n        position: \"absolute\",\n        width: \"100%\",\n        height: \"auto\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\"\n    },\n    imageWrapper: {\n        width: \"50%\",\n        overflow: \"hidden\",\n        height: \"auto\",\n        minHeight: \"180px\",\n        position: \"relative\",\n        cursor: \"pointer\",\n        borderRadius: \"12px 0 0 12px\",\n        \"@media only screen and (max-width: 620px)\": {\n            width: \"100%\",\n            borderRadius: \"12px 12px 0 0\"\n        }\n    },\n    title: {\n        color: \"black\",\n        textDecoration: \"none\",\n        fontSize: \"24px\",\n        fontWeight: \"bold\",\n    },\n    featured: {\n        width: \"100%\",\n        flexBasis: \"100%\",\n        backgroundColor: \"rgba(0, 0, 0, 0.05)\",\n    },\n    contentWrapper: {\n        position: \"relative\",\n        width: \"45%\",\n        padding: \"8px 12px\",\n        \"@media only screen and (max-width: 620px)\": {\n            width: \"auto\",\n        }\n    }\n\n});","import React from \"react\";\n\ntype FlexAlignType =\n  | 'flex-start'\n  | 'flex-end'\n  | 'center'\n  | 'stretch'\n  | 'baseline'\n\ntype FlexProperties = {\n  inline?: boolean\n  flexDirection?: 'row' | 'column' | 'row-reverse' | 'column-reverse'\n  flexWrap?: 'nowrap' | 'wrap' | 'wrap-reverse'\n  justifyContent?:\n    | 'flex-start'\n    | 'flex-end'\n    | 'center'\n    | 'space-between'\n    | 'space-around'\n    | 'space-evenly'\n  alignContent?:\n    | 'flex-start'\n    | 'flex-end'\n    | 'center'\n    | 'stretch'\n    | 'space-between'\n    | 'space-around'\n  alignItems?: FlexAlignType\n}\n\ntype FlexProps = {\n  children: React.ReactNode\n  className?: string\n  style?: object\n  width?: number | string\n  height?: number | string\n} & FlexProperties\n\nconst reduceProps = (props: FlexProps, ...args: string[]) => {\n    let _props = {...props};\n\n    for(var key in _props) {\n        // @ts-ignore\n        if(args.includes(key)) delete _props[key];\n    }\n\n    return _props;\n}\n\n/**\n * A component for easier flex-box implementation.\n * @example <Flex justifyContent=\"space-between\" alignItems=\"center\">...</Flex>\n */\nconst Flex = (props: FlexProps) => {\n  const reducedProps = reduceProps(props, \"children\", \"className\");\n\n  const style = Object.freeze({\n    display: \"flex\",\n      ...reducedProps,\n  });\n\n  return <div style={style} className={props.className}>{props.children}</div>\n}\n\nexport default Flex;","import React from \"react\";\nimport { createUseStyles } from \"react-jss\";\nimport styles from \"./styles\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { IconButton, Flex } from \"components/shared\";\n\ntype TAppBarProps = {\n\n}\n\n// Creates hook composing styles.\nconst useStyles = createUseStyles(styles);\n\nconst AppBar = (props: TAppBarProps) => {\n    const classes = useStyles();\n    const history = useHistory();\n    const location = useLocation();\n\n    const navigate = (path: string) => () => {\n        history.push(path);\n    }\n\n    return <Flex alignItems=\"center\" width=\"100%\" className={ classes.root }>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" width=\"100%\" className={ classes.container }>\n            {location.pathname === \"/\" ? \n                <h1 className={ classes.logo } onClick={navigate(\"/\")}>Sourcer</h1> \n                // @ts-ignore -- wtf?\n                : <IconButton name=\"arrow-left\" onClick={navigate(\"/\")} />}\n\n            <Flex justifyContent=\"flex-end\" alignItems=\"center\">\n                <IconButton name=\"cog\" onClick={navigate(\"/\")} />\n            </Flex>\n        </Flex>\n    </Flex>\n}\n\nexport default AppBar;\n","import { ITheme } from \"../../../types\";\n\nexport default (theme: ITheme) => ({\n\n    root: {\n        height: \"120px\",\n        width: \"100%\",\n    },\n    logo: {\n        color: theme.palette.primary.main,\n        cursor: \"pointer\",\n        userSelect: \"none\",\n        fontSize: \"48px\",\n        fontFamily: \"'Teko', sans-serif\",\n        margin: 0\n    },\n    container: {\n        maxWidth: theme.boundaries.width,\n        margin: \"0 auto\",\n        padding: `0 ${theme.boundaries.padding}`\n        \n    }\n    \n});","export interface IPostData {\n    id: string;\n    title: string;\n    author_id: string;\n    created_at: string;\n    languages: string[];\n    topics: string[];\n    thumbnail_url: string;\n}\n\nexport default\n    [\n        {\n            id: \"hello-world\",\n            title: \"Hello World\",\n            author_id: \"000-420\",\n            created_at: \"Thu Jun 04 2020 21:54:13 GMT+0200 (Central European Summer Time)\",\n            languages: [ \"en_US\", \"pl_PL\" ],\n            topics: [ \"offtopic\" ],\n            thumbnail_url: \"https://source.unsplash.com/random/1920x1080\"\n        },\n        {\n            id: \"welcome-to-jamrock\",\n            title: \"Welcome to Jamrock\",\n            author_id: \"100-000\",\n            created_at: \"Thu Jun 04 2020 21:54:13 GMT+0200 (Central European Summer Time)\",\n            languages: [ \"en_US\" ],\n            topics: [ \"offtopic\" ],\n            thumbnail_url: \"https://source.unsplash.com/random/1920x1080\"\n        },\n        {\n            id: \"rudy\",\n            title: \"Rudy Tytuł\",\n            author_id: \"100-000\",\n            created_at: \"Thu Jun 04 2020 21:54:13 GMT+0200 (Central European Summer Time)\",\n            languages: [ \"en_US\" ],\n            topics: [ \"offtopic\" ],\n            thumbnail_url: \"https://source.unsplash.com/random/1920x1080\"\n        },\n    ] as IPostData[];","import { IAuthor } from \"api/Author\";\n\nexport default\n    [\n        {\n            name: \"Mike\",\n            id: \"000-420\"\n        },\n        {\n            name: \"Damian\",\n            id: \"100-000\"\n        }\n    ] as IAuthor[]","import { IPost, getParsedPosts } from \"./Post\";\nimport authors from \"config/authors\";\n\nexport interface IAuthor {\n    name: string;\n    id: string;\n    posts: IPost[];\n    exists: boolean\n}\n\nexport class Author implements IAuthor {\n    name: string;\n    id: string;\n\n    constructor(author_id: string) {\n        const author = authors.find(a => a.id === author_id);\n\n        //if(!author) throw new Error(`Author with id ${author_id} cound not be found.`)\n\n        this.name = author?.name ?? \"\";\n        this.id = author_id;\n    }\n\n    get exists() {\n        return !!this.name;\n    }\n\n    get posts() {\n        return getParsedPosts().filter(p => p.author?.id === this.id);\n    }\n}","import posts from \"../posts\";\nimport { useRef, useEffect, useState } from \"react\";\nimport { IAuthor, Author } from \"./Author\";\n\nexport interface IPost {\n    id: string;\n    title: string;\n    author: IAuthor | null;\n    created_at: Date | null;\n    languages: string[];\n    topics: string[];\n    thumbnail_url: string;\n    content?: string;\n    exists: boolean;\n    fetchContent: () => Promise<string | void | undefined>;\n}\n\nexport class Post implements IPost {\n    id: string;\n    title: string;\n    author: IAuthor | null;\n    created_at: Date | null;\n    languages: string[];\n    thumbnail_url: string;\n    topics: string[];\n    content: string;\n\n    constructor(id: string) {\n        const meta = posts.find(p => p.id === id);\n\n        //if(!meta) throw new Error(`Post with id ${id} could not be found.`);\n\n        this.id = id;\n        this.title = meta?.title ?? \"\";\n        this.author = new Author(meta?.author_id ?? \"\") as IAuthor;\n        this.created_at = new Date(meta?.created_at ?? \"\");\n        this.languages = meta?.languages ?? [];\n        this.topics = meta?.topics ?? [];\n        this.thumbnail_url = meta?.thumbnail_url || \"\";\n        this.content = \"\";\n    }\n\n    get exists() {\n        return !!this.title;\n    }\n\n    // TODO: Implement language detection.\n    // TODO: Refactor response texts.\n    fetchContent() {\n        \n        return new Promise<string>((resolve) => {\n            let url;\n    \n            try {\n                url = require(`../posts/${this.id}/${this.id}--en_US.md`)\n            } catch(err) {\n                console.error(err);\n            }\n\n            if(!url) {\n                resolve(\"# Post not found.\");\n                return;\n            }\n\n            fetch(url)\n                .then(async (response) => {\n                    if(response.ok) {\n                        const md = await response.clone().text();\n\n                        resolve(md);\n                    } else {\n                        resolve(\"# Error while fetching post.\");\n                    }\n                })\n                .catch((err) => {\n                    resolve(\"# Unknown error occurred.\");\n                    console.error(err);\n                });\n        })\n    }\n}\n\nexport const getParsedPosts = () => posts.map(post => new Post(post.id));\n\nexport const usePosts = (volume?: number) => {\n    const ref = useRef(getParsedPosts());\n\n    if(typeof volume === \"number\") ref.current.length = volume;\n    \n    return ref.current as IPost[];\n}\n\nexport const usePost = (id: string) => {\n    const ref = useRef<IPost>(new Post(id));\n\n    const signal = useSignal();\n\n    useEffect(() => {\n         ref.current.fetchContent()\n            .then((md: string | void | undefined) => {\n                console.log(md);\n                if(typeof md === \"string\")\n                    ref.current.content = md;\n                signal();\n            });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return ref.current as IPost;\n}\n\nexport const useSignal = () => {\n    const doSignal = useState(false)[1];\n\n    return () => doSignal(s => !s);\n}","import React from \"react\";\nimport { usePosts } from \"api/Post\";\nimport styles from \"./styles\";\nimport { createUseStyles } from \"react-jss\";\nimport { PostCard, Flex } from \"components/shared\";\n\n// Creates hook composing styles.\nconst useStyles = createUseStyles(styles);\n\nconst Home = () => {\n    const classes = useStyles();\n    const posts = usePosts();\n\n    return <div className={ classes.root }>\n        <div className={ classes.container }>\n            <h2>Home</h2>\n\n            <PostCard featured {...posts[0]} />\n            <Flex justifyContent=\"space-between\" alignItems=\"center\" flexWrap=\"wrap\">\n                {\n                    // refactor to another component before extending..\n                    //posts.map(post => <PostCard {...post} />)\n\n                    posts.filter((__p, i) => i !== 0).map(post => <PostCard {...post} />)\n                }\n            </Flex>\n        </div>\n    </div>\n}\n\n\n\nexport default Home;","import { ITheme } from \"../../types\";\n\nexport default (theme: ITheme) => ({\n\n    root: {\n    },\n\n    container: {\n        maxWidth: theme.boundaries.width,\n        margin: \"0 auto\",\n        padding: `0 ${theme.boundaries.padding}`\n    }\n\n    \n});","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { createUseStyles } from \"react-jss\";\nimport { ITheme } from \"../types\";\nimport ReactMarkdown from \"react-markdown\";\nimport { usePost } from \"../api/Post\";\n\nconst useStyles = createUseStyles((theme: ITheme) => ({\n    root: {\n        \n\n\n        // \"& p\": {\n        //     opacity: 0.5\n        // }\n    },\n    container: {\n        maxWidth: theme.boundaries.width,\n        margin: \"0 auto\",\n        padding: `0 ${theme.boundaries.padding}`\n    },\n    image: {\n        width: \"100%\",\n        height: \"auto\",\n        position: \"absolute\",\n        left: \"50%\",\n        top: \"50%\",\n        transform: \"translate(-50%, -50%)\"\n    },\n    imageWrapper: {\n        position: \"relative\",\n        width: \"100%\",\n        height: \"300px\",\n        overflow: \"hidden\"\n    }\n}));\n\nconst SinglePost = () => {\n    const { id } = useParams();\n    const classes = useStyles();\n    \n    const post = usePost(id);\n\n\n    return <div className={classes.root}>\n        <div className={classes.container}>\n            <div className={classes.imageWrapper}>\n                <img alt=\"thumbnail\" src={post.thumbnail_url} className={classes.image} />\n            </div>\n            <ReactMarkdown source={post.content} />\n        </div>\n    </div>\n}\n\nexport default SinglePost;","import React from \"react\";\n\nconst Wrong = () => {\n\n    return <div>Wrong</div>\n}\n\nexport default Wrong;","export function invertColor(hex: string) {\n    if (hex.indexOf('#') === 0) {\n        hex = hex.slice(1);\n    }\n    // convert 3-digit hex to 6-digits.\n    if (hex.length === 3) {\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n    }\n    if (hex.length !== 6) {\n        throw new Error('Invalid HEX color.');\n    }\n    // invert color components\n    var r = (255 - parseInt(hex.slice(0, 2), 16)).toString(16),\n        g = (255 - parseInt(hex.slice(2, 4), 16)).toString(16),\n        b = (255 - parseInt(hex.slice(4, 6), 16)).toString(16);\n    // pad each with zeros and return\n    return '#' + padZero(r) + padZero(g) + padZero(b);\n}\n\nfunction padZero(str: string, len?: number) {\n    len = len || 2;\n    var zeros = new Array(len).join('0');\n    return (zeros + str).slice(-len);\n}\n\nexport function getContrastYIQ(hex: string){\n\tvar r = parseInt(hex.substr(0,2),16);\n\tvar g = parseInt(hex.substr(2,2),16);\n\tvar b = parseInt(hex.substr(4,2),16);\n\tvar yiq = ((r*299)+(g*587)+(b*114))/1000;\n\treturn (yiq >= 128) ? 'black' : 'white';\n}\n\nexport var lightenColor = function(color: string, percent: number) {\n    var num = parseInt(color.replace(\"#\",\"\"),16),\n      amt = Math.round(2.55 * percent),\n      R = (num >> 16) + amt,\n      // eslint-disable-next-line no-mixed-operators\n      B = (num >> 8 & 0x00FF) + amt,\n      G = (num & 0x0000FF) + amt;\n\n      return (0x1000000 + (R<255?R<1?0:R:255)*0x10000 + (B<255?B<1?0:B:255)*0x100 + (G<255?G<1?0:G:255)).toString(16).slice(1);\n};\n\nexport function hexToRgb(hex: string) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n      r: parseInt(result[1], 16),\n      g: parseInt(result[2], 16),\n      b: parseInt(result[3], 16)\n    } : null;\n  }","import { ITheme, TThemeColor } from \"../types\";\nimport { getContrastYIQ, invertColor, lightenColor, hexToRgb } from \"./colorMethods\";\n\nclass DynamicTheme implements ITheme {\n\n    palette = {\n        primary: new ThemeColor(\"#579ed9\"),\n        background: new ThemeColor(\"#d8e6f2\")\n    }\n\n    boundaries = {\n        width: \"1240px\",\n        padding: \"24px\"\n    }\n}\n\n\n\nclass ThemeColor implements TThemeColor {\n    public main: string;\n \n    constructor(baseColor: string) {\n        this.main = baseColor;   \n    }\n\n    get darker() {\n        return lightenColor(this.main as unknown as string, 15);\n    }\n\n    get lighter() {\n        return lightenColor(this.main as unknown as string, 10);\n    }\n\n    get inverted() {\n        return invertColor(this.main as unknown as string);\n    }\n\n    get text() {\n        return getContrastYIQ(this.main as unknown as string);\n    }\n    \n    get rgb() {\n        return hexToRgb(this.main);\n    }\n}\n\nexport default DynamicTheme;","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { faCheckSquare, faCoffee, faArrowLeft, faCog } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(fab, faCheckSquare, faCoffee, faArrowLeft, faCog)\n","import React, { useState } from 'react';\nimport LitteraProvider from \"react-littera\";\nimport { ThemeProvider } from \"react-jss\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { AppBar } from \"components/common\";\n \nimport { Home as HomePage, SinglePost as SinglePostPage, Wrong as WrongPage } from \"../pages\";\nimport DynamicTheme from \"utils/theme\";\nimport \"utils/icons\"\n\nfunction App() {\n  const [locale, setLocale] = useState(\"en_US\");\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={new DynamicTheme()}>\n        <Router basename={process.env.REACT_APP_BASENAME || \"/\"}>\n          <LitteraProvider language={locale} setLanguage={setLocale}>\n              <AppBar />\n\n              <Switch>\n                <Route exact path=\"/\" component={HomePage} />\n                <Route path=\"/p/:id\" component={SinglePostPage} />\n                <Route component={WrongPage} />\n              </Switch>\n          </LitteraProvider>\n        </Router>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","var map = {\n\t\"./hello-world/hello-world--en_US.md\": 72,\n\t\"./rudy/rudy--en_US.md\": 73,\n\t\"./welcome-to-jamrock/welcome-to-jamrock--en_US.md\": 74\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 71;","module.exports = __webpack_public_path__ + \"static/media/hello-world--en_US.038085a8.md\";","module.exports = __webpack_public_path__ + \"static/media/rudy--en_US.f727d1ee.md\";","module.exports = __webpack_public_path__ + \"static/media/welcome-to-jamrock--en_US.5a93df03.md\";"],"sourceRoot":""}